// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∞–π—Ç–∞
document.addEventListener('DOMContentLoaded', function () {
    console.log('–°–∞–π—Ç –ü–æ–¥–¥–∞—Ä—Å–∫ –∑–∞–≥—Ä—É–∂–µ–Ω!'); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    initApp();
});

function initApp() {
    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
    initSmoothScroll();

    // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    initModals();

    // –§–æ—Ä–º—ã
    initForms();

    // –ê–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    initScrollAnimations();
}

// –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
function initSmoothScroll() {
    const navLinks = document.querySelectorAll('a[href^="#"]');

    navLinks.forEach(link => {
        link.addEventListener('click', function (e) {
            e.preventDefault();
            const targetId = this.getAttribute('href');
            if (targetId === '#') return;

            const targetSection = document.querySelector(targetId);
            if (targetSection) {
                const offsetTop = targetSection.offsetTop - 80;
                window.scrollTo({
                    top: offsetTop,
                    behavior: 'smooth'
                });
            }
        });
    });
}

// –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
function initModals() {
    const loginBtn = document.getElementById('loginBtn');
    const modal = document.getElementById('loginModal');
    const closeBtn = document.querySelector('.close-btn');
    const loginForm = document.getElementById('residentLogin');

    console.log('–≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', { loginBtn, modal, closeBtn, loginForm }); // –û—Ç–ª–∞–¥–∫–∞

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    if (loginBtn) {
        loginBtn.addEventListener('click', (e) => {
            e.preventDefault();
            console.log('–ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ –Ω–∞–∂–∞—Ç–∞!');
            if (modal) {
                modal.style.display = 'block';
                document.body.style.overflow = 'hidden';
            }
        });
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    if (closeBtn) {
        closeBtn.addEventListener('click', () => {
            if (modal) {
                modal.style.display = 'none';
                document.body.style.overflow = 'auto';
            }
        });
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –æ–∫–Ω–∞
    window.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
    if (loginForm) {
        loginForm.addEventListener('submit', function (e) {
            e.preventDefault();
            console.log('–§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');

            const userId = this.querySelector('input[type="text"]').value;
            const password = this.querySelector('input[type="password"]').value;

            // –°–∏–º—É–ª—è—Ü–∏—è –≤—Ö–æ–¥–∞
            simulateLogin(userId, password);
        });
    }
}

// –°–∏–º—É–ª—è—Ü–∏—è –≤—Ö–æ–¥–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ª—É–≥
function simulateLogin(userId, password) {
    console.log('–ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞:', { userId, password });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const submitBtn = document.querySelector('.login-submit');
    const originalText = submitBtn.textContent;
    submitBtn.textContent = '–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...';
    submitBtn.disabled = true;

    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
    setTimeout(() => {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ API
        if (userId && password) {
            console.log('–í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!');
            // –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ - —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ª—É–≥
            createServicesPage();
        } else {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            console.log('–û—à–∏–±–∫–∞: –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ø–æ–ª—è');
        }

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        submitBtn.textContent = originalText;
        submitBtn.disabled = false;
    }, 1500);
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–º–Ω—ã—Ö —É—Å–ª—É–≥
function createServicesPage() {
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É—Å–ª—É–≥...');

    // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.getElementById('loginModal');
    if (modal) {
        modal.style.display = 'none';
    }
    document.body.style.overflow = 'auto';

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É—Å–ª—É–≥
    const servicesHTML = `
        <div class="services-page">
            <div class="services-header">
                <button onclick="closeServicesPage()" class="back-btn">‚Üê –ù–∞–∑–∞–¥</button>
                <h1>–£–º–Ω—ã–µ —É—Å–ª—É–≥–∏ –ü–æ–¥–¥–∞—Ä—Å–∫–∞</h1>
                <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —É–º–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞</p>
            </div>
            
            <div class="services-grid">
                <div class="service-card" onclick="openService('transport')">
                    <div class="service-icon">üöó</div>
                    <h3>–£–º–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç</h3>
                    <p>–†–æ–±–æ—Ç—ã-—Ç–∞–∫—Å–∏, –∫–∞—Ä—à–µ—Ä–∏–Ω–≥, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤</p>
                    <div class="service-status active">–î–æ—Å—Ç—É–ø–Ω–æ</div>
                </div>
                
                <div class="service-card" onclick="openService('delivery')">
                    <div class="service-icon">ü§ñ</div>
                    <h3>–†–æ–±–æ—Ç—ã-–¥–æ—Å—Ç–∞–≤—â–∏–∫–∏</h3>
                    <p>–î–æ—Å—Ç–∞–≤–∫–∞ –µ–¥—ã, —Ç–æ–≤–∞—Ä–æ–≤ –∏ –≤—ã–≤–æ–∑ –º—É—Å–æ—Ä–∞</p>
                    <div class="service-status active">–î–æ—Å—Ç—É–ø–Ω–æ</div>
                </div>
                
                <div class="service-card" onclick="openService('energy')">
                    <div class="service-icon">‚ö°</div>
                    <h3>–£–º–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è</h3>
                    <p>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è, —É–º–Ω—ã–µ —Å–µ—Ç–∏</p>
                    <div class="service-status development">–°–∫–æ—Ä–æ</div>
                </div>
                
                <div class="service-card" onclick="openService('health')">
                    <div class="service-icon">üè•</div>
                    <h3>–¶–∏—Ñ—Ä–æ–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ</h3>
                    <p>–¢–µ–ª–µ–º–µ–¥–∏—Ü–∏–Ω–∞, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–¥–æ—Ä–æ–≤—å—è</p>
                    <div class="service-status planning">–í –ø–ª–∞–Ω–∞—Ö</div>
                </div>
                
                <div class="service-card" onclick="openService('gov')">
                    <div class="service-icon">üèõÔ∏è</div>
                    <h3>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ</h3>
                    <p>–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è, —É—Å–ª—É–≥–∏, –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</p>
                    <div class="service-status active">–î–æ—Å—Ç—É–ø–Ω–æ</div>
                </div>
                
                <div class="service-card" onclick="openService('eco')">
                    <div class="service-icon">üåø</div>
                    <h3>–≠–∫–æ-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</h3>
                    <p>–ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞, –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Ö–æ–¥–æ–≤</p>
                    <div class="service-status active">–î–æ—Å—Ç—É–ø–Ω–æ</div>
                </div>
            </div>
            
            <div class="user-panel">
                <div class="user-info">
                    <h3>–í–∞—à —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–ª–µ–¥</h3>
                    <div class="eco-stats">
                        <div class="eco-stat">
                            <span class="stat-value">85%</span>
                            <span class="stat-label">–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞</span>
                        </div>
                        <div class="eco-stat">
                            <span class="stat-value">12 kW</span>
                            <span class="stat-label">–≠–Ω–µ—Ä–≥–∏—è —Å–µ–≥–æ–¥–Ω—è</span>
                        </div>
                        <div class="eco-stat">
                            <span class="stat-value">2.1 L</span>
                            <span class="stat-label">–í–æ–¥–∞ —Å—ç–∫–æ–Ω–æ–º–ª–µ–Ω–∞</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É—Å–ª—É–≥
    const servicesStyles = `
        <style>
            .services-page {
                min-height: 100vh;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                padding: 80px 20px 40px;
            }
            
            .services-header {
                text-align: center;
                margin-bottom: 3rem;
                position: relative;
            }
            
            .back-btn {
                position: absolute;
                left: 0;
                top: 0;
                background: rgba(255,255,255,0.2);
                border: none;
                color: white;
                padding: 10px 20px;
                border-radius: 25px;
                cursor: pointer;
                backdrop-filter: blur(10px);
            }
            
            .services-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                gap: 2rem;
                max-width: 1200px;
                margin: 0 auto 3rem;
            }
            
            .service-card {
                background: rgba(255,255,255,0.1);
                padding: 2rem;
                border-radius: 20px;
                backdrop-filter: blur(10px);
                border: 1px solid rgba(255,255,255,0.2);
                cursor: pointer;
                transition: all 0.3s ease;
            }
            
            .service-card:hover {
                transform: translateY(-5px);
                background: rgba(255,255,255,0.15);
            }
            
            .service-icon {
                font-size: 3rem;
                margin-bottom: 1rem;
            }
            
            .service-status {
                display: inline-block;
                padding: 0.3rem 1rem;
                border-radius: 15px;
                font-size: 0.8rem;
                font-weight: 600;
                margin-top: 1rem;
            }
            
            .service-status.active {
                background: #4CAF50;
            }
            
            .service-status.development {
                background: #FF9800;
            }
            
            .service-status.planning {
                background: #9E9E9E;
            }
            
            .user-panel {
                max-width: 1200px;
                margin: 0 auto;
                background: rgba(255,255,255,0.1);
                padding: 2rem;
                border-radius: 20px;
                backdrop-filter: blur(10px);
            }
            
            .eco-stats {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
                gap: 1rem;
                margin-top: 1rem;
            }
            
            .eco-stat {
                text-align: center;
                padding: 1rem;
                background: rgba(255,255,255,0.1);
                border-radius: 10px;
            }
            
            .stat-value {
                display: block;
                font-size: 1.5rem;
                font-weight: bold;
                margin-bottom: 0.5rem;
            }
        </style>
    `;

    // –ó–∞–º–µ–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.body.innerHTML = servicesStyles + servicesHTML;
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É—Å–ª—É–≥
function closeServicesPage() {
    window.location.reload();
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
function openService(serviceName) {
    alert(`–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å–µ—Ä–≤–∏—Å: ${serviceName}\n–í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–µ—Ä–≤–∏—Å—É`);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º
function initForms() {
    const founderForm = document.querySelector('.founder-form');
    if (founderForm) {
        founderForm.addEventListener('submit', function (e) {
            e.preventDefault();
            alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
            this.reset();
        });
    }
}

// –ê–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
function initScrollAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
    document.querySelectorAll('.philosophy-card, .project-card').forEach(card => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px)';
        card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(card);
    });
}

// –°–¥–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –¥–ª—è HTML onclick
window.scrollToSection = function (sectionId) {
    const section = document.getElementById(sectionId);
    if (section) {
        const offsetTop = section.offsetTop - 80;
        window.scrollTo({
            top: offsetTop,
            behavior: 'smooth'
        });
    }
};

window.simulateLogin = simulateLogin;
window.closeServicesPage = closeServicesPage;
window.openService = openService;
// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker –¥–ª—è PWA
if ('serviceWorker' in navigator) {
    window.addEventListener('load', function () {
        navigator.serviceWorker.register('/sw.js')
            .then(function (registration) {
                console.log('ServiceWorker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ', registration.scope);
            })
            .catch(function (error) {
                console.log('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ServiceWorker: ', error);
            });
    });
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏
let deferredPrompt;
const installBtn = document.createElement('button');
installBtn.innerHTML = 'üì± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ';
installBtn.style.cssText = `
  position: fixed;
  bottom: 20px;
  right: 20px;
  background: #2c5530;
  color: white;
  border: none;
  padding: 12px 20px;
  border-radius: 25px;
  cursor: pointer;
  z-index: 1000;
  box-shadow: 0 4px 12px rgba(0,0,0,0.3);
  font-size: 14px;
`;

window.addEventListener('beforeinstallprompt', (e) => {
    e.preventDefault();
    deferredPrompt = e;
    document.body.appendChild(installBtn);

    installBtn.addEventListener('click', () => {
        installBtn.style.display = 'none';
        deferredPrompt.prompt();
        deferredPrompt.userChoice.then((choiceResult) => {
            if (choiceResult.outcome === 'accepted') {
                console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å—Ç–∞–Ω–æ–≤–∏–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
            }
            deferredPrompt = null;
        });
    });
});